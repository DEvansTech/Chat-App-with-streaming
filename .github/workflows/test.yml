name: test

on:
  push:
    branches:
      - master
      - v2-design
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [10, 12, 14]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}

      - name: Get yarn cache directory path
        id: yarn-cache-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@master
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-path.outputs.dir }}
          key: yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: yarn-

      - name: Install dependencies
        run: yarn install

      - name: Lint and Test with ${{ matrix.node }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          yarn lint
          yarn test
          yarn docs
          yarn validate-translations
  build_and_deploy_ios:
    runs-on: [macos-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Install RubyGems
        run: |
          cd examples/SampleApp/ios
          bundle install
      - name: Install firebase-tools
        run: npm install -g firebase-tools
      - name: RN setup
        run: |
          cd examples/SampleApp
          yarn;
          cd ios
          pod install
      - name: Build and release
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          cd examples/SampleApp/ios
          bundle exec fastlane distribute
