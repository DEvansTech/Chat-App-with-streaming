name: docusaurus

on:
  push:
    branches:
      - master # default branch name for each repo that docs should be push from
    paths:
      - docusaurus/**
jobs:
  push_docusaurus:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: push
        run: |
            set -e  # if a command fails it stops the execution
            set -u  # script fails if trying to access to an undefined variable

            CLONE_DIR=$(mktemp -d)

            echo "Cloning destination git repository"
            # Setup git
            git config --global user.email ""
            git config --global user.name "$DESTINATION_GITHUB_USERNAME"
            git clone --single-branch --branch "$TARGET_BRANCH" "https://$GITHUB_TOKEN@github.com/$DESTINATION_GITHUB_USERNAME/$DESTINATION_REPOSITORY_NAME.git" "$CLONE_DIR"
            ls -la "$CLONE_DIR"

            # Creating an array of SDK names from the local docusaurus/docs dir
            SDKs=(`find ./$SOURCE_DIRECTORY/docs -maxdepth 1 -mindepth 1 -type d | awk -F'/' '{print $4}'`)

            # Looping through the SDKs to rsync custom files within the docusaurus dir for each SDK
            # Skipping any custom plugins as we don't want custom plugins pushed to the main docusaurus repo for builds.
            # Custom plugins should only be locally used for markdown generation
            # Also rsync the docusaurus/docs/SDK dir to get a full sync of the current SDK being pushed to the main docusaurus repo
            for sdk in "${SDKs[@]}"
            do
              echo "Deleting all contents of $sdk in target git repository and copying current over"
              SDK_NO_SPACES="${sdk/ /}"
              rsync -avPh --delete --exclude='*plugin.js' --include="*$SDK_NO_SPACES*" --exclude='*' "$SOURCE_DIRECTORY/" "$CLONE_DIR/$SOURCE_DIRECTORY"
              rsync -avPh --delete "$SOURCE_DIRECTORY/docs/$sdk/" "$CLONE_DIR/$SOURCE_DIRECTORY/docs/$sdk"
            done

            ORIGIN_COMMIT="https://github.com/$GITHUB_REPOSITORY/commit/$GITHUB_SHA"
            COMMIT_MESSAGE="${COMMIT_MESSAGE/ORIGIN_COMMIT/$ORIGIN_COMMIT}"
            COMMIT_MESSAGE="${COMMIT_MESSAGE/\$GITHUB_REF/$GITHUB_REF}"

            git add .

            git status

            # git diff-index : to avoid the git commit failing if there are no changes to be committed
            git diff-index --quiet HEAD || git commit --message "$COMMIT_MESSAGE"

            # --set-upstream: sets default branch when pushing to a branch that does not exist
            git push origin --set-upstream "$TARGET_BRANCH"
        env:
            COMMIT_MESSAGE: Update from ORIGIN_COMMIT
            DESTINATION_GITHUB_USERNAME: GetStream
            DESTINATION_REPOSITORY_NAME: stream-chat-docusaurus
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SOURCE_DIRECTORY: docusaurus
            TARGET_BRANCH: main
