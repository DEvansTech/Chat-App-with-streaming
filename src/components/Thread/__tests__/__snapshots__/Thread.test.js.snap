// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Thread should match thread snapshot 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "display": "flex",
    }
  }
>
  <View
    collapsable={false}
  >
    <View
      collapsable={false}
      style={
        Object {
          "height": "100%",
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "width": "100%",
          }
        }
      >
        <RCTScrollView
          ListFooterComponent={
            <React.Fragment>
              <Message
                EmptyStateIndicator={[Function]}
                MessageInput={[Function]}
                MessageList={[Function]}
                autoFocus={true}
                channel={
                  Channel {
                    "_callChannelListeners": [Function],
                    "_channelURL": [Function],
                    "_client": StreamChat {
                      "_callClientListeners": [Function],
                      "_hasConnectionID": [Function],
                      "_isUsingServerAuth": [Function],
                      "_setToken": [MockFunction],
                      "_setupConnection": [MockFunction],
                      "_user": Object {
                        "id": "testID2",
                        "mutes": Array [],
                      },
                      "activeChannels": Object {
                        "messaging:c15ca31e-4cc4-512c-8495-1d4c278763af": [Circular],
                      },
                      "anonymous": false,
                      "axiosInstance": [Function],
                      "baseURL": "https://chat-us-east-1.stream-io-api.com",
                      "browser": false,
                      "configs": Object {
                        "messaging": Object {
                          "automod": "disabled",
                          "automod_behavior": "flag",
                          "commands": Array [
                            Object {
                              "args": "[text]",
                              "description": "Post a random gif to the channel",
                              "name": "giphy",
                              "set": "fun_set",
                            },
                          ],
                          "connect_events": true,
                          "created_at": "2020-04-24T11:36:43.859020368Z",
                          "max_message_length": 5000,
                          "message_retention": "infinite",
                          "mutes": true,
                          "name": "messaging",
                          "reactions": true,
                          "read_events": true,
                          "replies": true,
                          "search": true,
                          "typing_events": true,
                          "updated_at": "2020-04-24T11:36:43.859022903Z",
                          "uploads": true,
                          "url_enrichment": true,
                        },
                      },
                      "connectionId": "dumm_connection_id",
                      "dispatchEvent": [Function],
                      "doAxiosRequest": [Function],
                      "handleEvent": [Function],
                      "key": "API_KEY",
                      "listeners": Object {
                        "connection.changed": Array [
                          [Function],
                        ],
                        "connection.recovered": Array [
                          [Function],
                          [Function],
                        ],
                      },
                      "logger": [Function],
                      "mutedChannels": Array [],
                      "node": true,
                      "options": Object {
                        "httpAgent": Agent {
                          "_events": Object {
                            "free": [Function],
                            "newListener": [Function],
                          },
                          "_eventsCount": 2,
                          "_maxListeners": undefined,
                          "defaultPort": 80,
                          "freeSockets": Object {},
                          "keepAlive": 3000,
                          "keepAliveMsecs": 1000,
                          "maxFreeSockets": 256,
                          "maxSockets": Infinity,
                          "options": Object {
                            "keepAlive": 3000,
                            "path": null,
                          },
                          "protocol": "http:",
                          "requests": Object {},
                          "sockets": Object {},
                          Symbol(kCapture): false,
                        },
                        "httpsAgent": Agent {
                          "_events": Object {
                            "free": [Function],
                            "newListener": [Function],
                          },
                          "_eventsCount": 2,
                          "_maxListeners": undefined,
                          "_sessionCache": Object {
                            "list": Array [],
                            "map": Object {},
                          },
                          "defaultPort": 443,
                          "freeSockets": Object {},
                          "keepAlive": 3000,
                          "keepAliveMsecs": 1000,
                          "maxCachedSessions": 100,
                          "maxFreeSockets": 256,
                          "maxSockets": Infinity,
                          "options": Object {
                            "keepAlive": 3000,
                            "path": null,
                          },
                          "protocol": "https:",
                          "requests": Object {},
                          "sockets": Object {},
                          Symbol(kCapture): false,
                        },
                        "timeout": 3000,
                        "withCredentials": false,
                      },
                      "recoverState": [Function],
                      "secret": null,
                      "setAnonymousUser": [Function],
                      "setUser": [Function],
                      "setUserPromise": null,
                      "state": ClientState {
                        "userChannelReferences": Object {
                          "GrantyBoi2": Object {
                            "messaging:c15ca31e-4cc4-512c-8495-1d4c278763af": true,
                          },
                        },
                        "users": Object {
                          "GrantyBoi2": Object {
                            "banned": false,
                            "created_at": "2020-04-27T13:39:49.331742Z",
                            "id": "GrantyBoi2",
                            "image": "https://i.imgur.com/SLx06PP.png",
                            "name": "Grant",
                            "online": false,
                            "role": "user",
                            "updated_at": "2020-04-27T13:39:49.332087Z",
                          },
                        },
                      },
                      "tokenManager": Object {
                        "getToken": [MockFunction] {
                          "calls": Array [
                            Array [],
                            Array [],
                          ],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": "dummy_token",
                            },
                            Object {
                              "type": "return",
                              "value": "dummy_token",
                            },
                          ],
                        },
                        "tokenReady": [MockFunction] {
                          "calls": Array [
                            Array [],
                            Array [],
                          ],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": true,
                            },
                            Object {
                              "type": "return",
                              "value": true,
                            },
                          ],
                        },
                      },
                      "user": Object {
                        "id": "testID2",
                        "mutes": Array [],
                      },
                      "userID": "testID2",
                      "userToken": "dummy_token",
                      "wsBaseURL": "wss://chat-us-east-1.stream-io-api.com",
                      "wsConnection": null,
                      "wsPromise": null,
                    },
                    "_data": Object {},
                    "cid": "messaging:c15ca31e-4cc4-512c-8495-1d4c278763af",
                    "create": [Function],
                    "data": Object {
                      "cid": "messaging:c15ca31e-4cc4-512c-8495-1d4c278763af",
                      "config": Object {
                        "automod": "disabled",
                        "automod_behavior": "flag",
                        "commands": Array [
                          Object {
                            "args": "[text]",
                            "description": "Post a random gif to the channel",
                            "name": "giphy",
                            "set": "fun_set",
                          },
                        ],
                        "connect_events": true,
                        "created_at": "2020-04-24T11:36:43.859020368Z",
                        "max_message_length": 5000,
                        "message_retention": "infinite",
                        "mutes": true,
                        "name": "messaging",
                        "reactions": true,
                        "read_events": true,
                        "replies": true,
                        "search": true,
                        "typing_events": true,
                        "updated_at": "2020-04-24T11:36:43.859022903Z",
                        "uploads": true,
                        "url_enrichment": true,
                      },
                      "created_at": "2020-04-28T11:20:48.578147Z",
                      "created_by": Object {
                        "banned": false,
                        "created_at": "2020-04-27T13:05:13.847572Z",
                        "id": "vishal",
                        "last_active": "2020-04-28T11:21:08.353026Z",
                        "online": false,
                        "role": "user",
                        "updated_at": "2020-04-28T11:21:08.357468Z",
                      },
                      "frozen": false,
                      "id": "c15ca31e-4cc4-512c-8495-1d4c278763af",
                      "type": "messaging",
                      "updated_at": "2020-04-28T11:20:48.578147Z",
                    },
                    "disconnected": false,
                    "id": "c15ca31e-4cc4-512c-8495-1d4c278763af",
                    "initialized": true,
                    "isTyping": false,
                    "lastTypingEvent": null,
                    "listeners": Object {
                      "all": Array [
                        [Function],
                      ],
                    },
                    "state": ChannelState {
                      "_channel": [Circular],
                      "last_message_at": 2020-05-05T14:50:00.000Z,
                      "members": Object {
                        "GrantyBoi2": Object {
                          "invited": false,
                          "is_moderator": false,
                          "role": "member",
                          "user": Object {
                            "banned": false,
                            "created_at": "2020-04-27T13:39:49.331742Z",
                            "id": "GrantyBoi2",
                            "image": "https://i.imgur.com/SLx06PP.png",
                            "name": "Grant",
                            "online": false,
                            "role": "user",
                            "updated_at": "2020-04-27T13:39:49.332087Z",
                          },
                          "user_id": "GrantyBoi2",
                        },
                      },
                      "membership": Object {},
                      "messages": Array [
                        Object {
                          "__html": "<p>regular</p>",
                          "attachments": Array [],
                          "created_at": 2020-05-05T14:48:00.000Z,
                          "html": "<p>regular</p>",
                          "id": "e06aaa16-3deb-5d91-bca5-50efc733c183",
                          "status": "received",
                          "text": "Message1",
                          "type": "regular",
                          "updated_at": 2020-05-05T14:48:00.000Z,
                          "user": Object {
                            "banned": false,
                            "created_at": "2020-04-27T13:39:49.331742Z",
                            "id": "GrantyBoi2",
                            "image": "https://i.imgur.com/SLx06PP.png",
                            "name": "Grant",
                            "online": false,
                            "role": "user",
                            "updated_at": "2020-04-27T13:39:49.332087Z",
                          },
                        },
                        Object {
                          "__html": "<p>regular</p>",
                          "attachments": Array [],
                          "created_at": 2020-05-05T14:49:00.000Z,
                          "html": "<p>regular</p>",
                          "id": "b7e00d73-82c4-59b6-a465-0785af2bc6d9",
                          "status": "received",
                          "text": "Message2",
                          "type": "regular",
                          "updated_at": 2020-05-05T14:49:00.000Z,
                          "user": Object {
                            "banned": false,
                            "created_at": "2020-04-27T13:39:49.331742Z",
                            "id": "NeiliBoi3",
                            "image": "https://i.imgur.com/T68W8nR_d.webp?maxwidth=728&fidelity=grand",
                            "name": "Neil",
                            "online": false,
                            "role": "user",
                            "updated_at": "2020-04-27T13:39:49.332087Z",
                          },
                        },
                        Object {
                          "__html": "<p>regular</p>",
                          "attachments": Array [],
                          "created_at": 2020-05-05T14:50:00.000Z,
                          "html": "<p>regular</p>",
                          "id": "b4612a73-fa2b-5787-bf71-1adc8f291a04",
                          "status": "received",
                          "text": "Message3",
                          "type": "regular",
                          "updated_at": 2020-05-05T14:50:00.000Z,
                          "user": Object {
                            "banned": false,
                            "created_at": "2020-04-27T13:39:49.331742Z",
                            "id": "NeiliBoi3",
                            "image": "https://i.imgur.com/T68W8nR_d.webp?maxwidth=728&fidelity=grand",
                            "name": "Neil",
                            "online": false,
                            "role": "user",
                            "updated_at": "2020-04-27T13:39:49.332087Z",
                          },
                        },
                      ],
                      "mutedUsers": Array [],
                      "read": Object {
                        "testID2": Object {
                          "last_read": 2020-05-05T14:50:00.000Z,
                          "user": Object {
                            "id": "testID2",
                            "mutes": Array [],
                          },
                        },
                      },
                      "removeMessageFromArray": [Function],
                      "threads": Object {
                        "b4612a73-fa2b-5787-bf71-1adc8f291a04": Array [
                          Object {
                            "__html": "<p>regular</p>",
                            "attachments": Array [],
                            "created_at": 2020-05-05T14:50:00.000Z,
                            "html": "<p>regular</p>",
                            "id": "82a83b16-b611-527c-b3ac-765ef6220490",
                            "parent_id": "b4612a73-fa2b-5787-bf71-1adc8f291a04",
                            "status": "received",
                            "text": "Message4",
                            "type": "regular",
                            "updated_at": 2020-05-05T14:50:00.000Z,
                            "user": Object {
                              "banned": false,
                              "created_at": "2020-04-27T13:39:49.331742Z",
                              "id": "GrantyBoi2",
                              "image": "https://i.imgur.com/SLx06PP.png",
                              "name": "Grant",
                              "online": false,
                              "role": "user",
                              "updated_at": "2020-04-27T13:39:49.332087Z",
                            },
                          },
                          Object {
                            "__html": "<p>regular</p>",
                            "attachments": Array [],
                            "created_at": 2020-05-05T14:50:00.000Z,
                            "html": "<p>regular</p>",
                            "id": "516efa25-5d29-5c9a-ad2d-4cc183e785bd",
                            "parent_id": "b4612a73-fa2b-5787-bf71-1adc8f291a04",
                            "status": "received",
                            "text": "Message5",
                            "type": "regular",
                            "updated_at": 2020-05-05T14:50:00.000Z,
                            "user": Object {
                              "banned": false,
                              "created_at": "2020-04-27T13:39:49.331742Z",
                              "id": "NeiliBoi3",
                              "image": "https://i.imgur.com/T68W8nR_d.webp?maxwidth=728&fidelity=grand",
                              "name": "Neil",
                              "online": false,
                              "role": "user",
                              "updated_at": "2020-04-27T13:39:49.332087Z",
                            },
                          },
                          Object {
                            "__html": "<p>regular</p>",
                            "attachments": Array [],
                            "created_at": 2020-05-05T14:50:00.000Z,
                            "html": "<p>regular</p>",
                            "id": "38ef6f7c-3090-5759-a37f-ab0053aadb96",
                            "parent_id": "b4612a73-fa2b-5787-bf71-1adc8f291a04",
                            "status": "received",
                            "text": "Message6",
                            "type": "regular",
                            "updated_at": 2020-05-05T14:50:00.000Z,
                            "user": Object {
                              "banned": false,
                              "created_at": "2020-04-27T13:39:49.331742Z",
                              "id": "GrantyBoi2",
                              "image": "https://i.imgur.com/SLx06PP.png",
                              "name": "Grant",
                              "online": false,
                              "role": "user",
                              "updated_at": "2020-04-27T13:39:49.332087Z",
                            },
                          },
                        ],
                      },
                      "typing": Object {},
                      "watcher_count": undefined,
                      "watchers": Object {},
                    },
                    "type": "messaging",
                  }
                }
                client={
                  StreamChat {
                    "_callClientListeners": [Function],
                    "_hasConnectionID": [Function],
                    "_isUsingServerAuth": [Function],
                    "_setToken": [MockFunction],
                    "_setupConnection": [MockFunction],
                    "_user": Object {
                      "id": "testID2",
                      "mutes": Array [],
                    },
                    "activeChannels": Object {
                      "messaging:c15ca31e-4cc4-512c-8495-1d4c278763af": Channel {
                        "_callChannelListeners": [Function],
                        "_channelURL": [Function],
                        "_client": [Circular],
                        "_data": Object {},
                        "cid": "messaging:c15ca31e-4cc4-512c-8495-1d4c278763af",
                        "create": [Function],
                        "data": Object {
                          "cid": "messaging:c15ca31e-4cc4-512c-8495-1d4c278763af",
                          "config": Object {
                            "automod": "disabled",
                            "automod_behavior": "flag",
                            "commands": Array [
                              Object {
                                "args": "[text]",
                                "description": "Post a random gif to the channel",
                                "name": "giphy",
                                "set": "fun_set",
                              },
                            ],
                            "connect_events": true,
                            "created_at": "2020-04-24T11:36:43.859020368Z",
                            "max_message_length": 5000,
                            "message_retention": "infinite",
                            "mutes": true,
                            "name": "messaging",
                            "reactions": true,
                            "read_events": true,
                            "replies": true,
                            "search": true,
                            "typing_events": true,
                            "updated_at": "2020-04-24T11:36:43.859022903Z",
                            "uploads": true,
                            "url_enrichment": true,
                          },
                          "created_at": "2020-04-28T11:20:48.578147Z",
                          "created_by": Object {
                            "banned": false,
                            "created_at": "2020-04-27T13:05:13.847572Z",
                            "id": "vishal",
                            "last_active": "2020-04-28T11:21:08.353026Z",
                            "online": false,
                            "role": "user",
                            "updated_at": "2020-04-28T11:21:08.357468Z",
                          },
                          "frozen": false,
                          "id": "c15ca31e-4cc4-512c-8495-1d4c278763af",
                          "type": "messaging",
                          "updated_at": "2020-04-28T11:20:48.578147Z",
                        },
                        "disconnected": false,
                        "id": "c15ca31e-4cc4-512c-8495-1d4c278763af",
                        "initialized": true,
                        "isTyping": false,
                        "lastTypingEvent": null,
                        "listeners": Object {
                          "all": Array [
                            [Function],
                          ],
                        },
                        "state": ChannelState {
                          "_channel": [Circular],
                          "last_message_at": 2020-05-05T14:50:00.000Z,
                          "members": Object {
                            "GrantyBoi2": Object {
                              "invited": false,
                              "is_moderator": false,
                              "role": "member",
                              "user": Object {
                                "banned": false,
                                "created_at": "2020-04-27T13:39:49.331742Z",
                                "id": "GrantyBoi2",
                                "image": "https://i.imgur.com/SLx06PP.png",
                                "name": "Grant",
                                "online": false,
                                "role": "user",
                                "updated_at": "2020-04-27T13:39:49.332087Z",
                              },
                              "user_id": "GrantyBoi2",
                            },
                          },
                          "membership": Object {},
                          "messages": Array [
                            Object {
                              "__html": "<p>regular</p>",
                              "attachments": Array [],
                              "created_at": 2020-05-05T14:48:00.000Z,
                              "html": "<p>regular</p>",
                              "id": "e06aaa16-3deb-5d91-bca5-50efc733c183",
                              "status": "received",
                              "text": "Message1",
                              "type": "regular",
                              "updated_at": 2020-05-05T14:48:00.000Z,
                              "user": Object {
                                "banned": false,
                                "created_at": "2020-04-27T13:39:49.331742Z",
                                "id": "GrantyBoi2",
                                "image": "https://i.imgur.com/SLx06PP.png",
                                "name": "Grant",
                                "online": false,
                                "role": "user",
                                "updated_at": "2020-04-27T13:39:49.332087Z",
                              },
                            },
                            Object {
                              "__html": "<p>regular</p>",
                              "attachments": Array [],
                              "created_at": 2020-05-05T14:49:00.000Z,
                              "html": "<p>regular</p>",
                              "id": "b7e00d73-82c4-59b6-a465-0785af2bc6d9",
                              "status": "received",
                              "text": "Message2",
                              "type": "regular",
                              "updated_at": 2020-05-05T14:49:00.000Z,
                              "user": Object {
                                "banned": false,
                                "created_at": "2020-04-27T13:39:49.331742Z",
                                "id": "NeiliBoi3",
                                "image": "https://i.imgur.com/T68W8nR_d.webp?maxwidth=728&fidelity=grand",
                                "name": "Neil",
                                "online": false,
                                "role": "user",
                                "updated_at": "2020-04-27T13:39:49.332087Z",
                              },
                            },
                            Object {
                              "__html": "<p>regular</p>",
                              "attachments": Array [],
                              "created_at": 2020-05-05T14:50:00.000Z,
                              "html": "<p>regular</p>",
                              "id": "b4612a73-fa2b-5787-bf71-1adc8f291a04",
                              "status": "received",
                              "text": "Message3",
                              "type": "regular",
                              "updated_at": 2020-05-05T14:50:00.000Z,
                              "user": Object {
                                "banned": false,
                                "created_at": "2020-04-27T13:39:49.331742Z",
                                "id": "NeiliBoi3",
                                "image": "https://i.imgur.com/T68W8nR_d.webp?maxwidth=728&fidelity=grand",
                                "name": "Neil",
                                "online": false,
                                "role": "user",
                                "updated_at": "2020-04-27T13:39:49.332087Z",
                              },
                            },
                          ],
                          "mutedUsers": Array [],
                          "read": Object {
                            "testID2": Object {
                              "last_read": 2020-05-05T14:50:00.000Z,
                              "user": Object {
                                "id": "testID2",
                                "mutes": Array [],
                              },
                            },
                          },
                          "removeMessageFromArray": [Function],
                          "threads": Object {
                            "b4612a73-fa2b-5787-bf71-1adc8f291a04": Array [
                              Object {
                                "__html": "<p>regular</p>",
                                "attachments": Array [],
                                "created_at": 2020-05-05T14:50:00.000Z,
                                "html": "<p>regular</p>",
                                "id": "82a83b16-b611-527c-b3ac-765ef6220490",
                                "parent_id": "b4612a73-fa2b-5787-bf71-1adc8f291a04",
                                "status": "received",
                                "text": "Message4",
                                "type": "regular",
                                "updated_at": 2020-05-05T14:50:00.000Z,
                                "user": Object {
                                  "banned": false,
                                  "created_at": "2020-04-27T13:39:49.331742Z",
                                  "id": "GrantyBoi2",
                                  "image": "https://i.imgur.com/SLx06PP.png",
                                  "name": "Grant",
                                  "online": false,
                                  "role": "user",
                                  "updated_at": "2020-04-27T13:39:49.332087Z",
                                },
                              },
                              Object {
                                "__html": "<p>regular</p>",
                                "attachments": Array [],
                                "created_at": 2020-05-05T14:50:00.000Z,
                                "html": "<p>regular</p>",
                                "id": "516efa25-5d29-5c9a-ad2d-4cc183e785bd",
                                "parent_id": "b4612a73-fa2b-5787-bf71-1adc8f291a04",
                                "status": "received",
                                "text": "Message5",
                                "type": "regular",
                                "updated_at": 2020-05-05T14:50:00.000Z,
                                "user": Object {
                                  "banned": false,
                                  "created_at": "2020-04-27T13:39:49.331742Z",
                                  "id": "NeiliBoi3",
                                  "image": "https://i.imgur.com/T68W8nR_d.webp?maxwidth=728&fidelity=grand",
                                  "name": "Neil",
                                  "online": false,
                                  "role": "user",
                                  "updated_at": "2020-04-27T13:39:49.332087Z",
                                },
                              },
                              Object {
                                "__html": "<p>regular</p>",
                                "attachments": Array [],
                                "created_at": 2020-05-05T14:50:00.000Z,
                                "html": "<p>regular</p>",
                                "id": "38ef6f7c-3090-5759-a37f-ab0053aadb96",
                                "parent_id": "b4612a73-fa2b-5787-bf71-1adc8f291a04",
                                "status": "received",
                                "text": "Message6",
                                "type": "regular",
                                "updated_at": 2020-05-05T14:50:00.000Z,
                                "user": Object {
                                  "banned": false,
                                  "created_at": "2020-04-27T13:39:49.331742Z",
                                  "id": "GrantyBoi2",
                                  "image": "https://i.imgur.com/SLx06PP.png",
                                  "name": "Grant",
                                  "online": false,
                                  "role": "user",
                                  "updated_at": "2020-04-27T13:39:49.332087Z",
                                },
                              },
                            ],
                          },
                          "typing": Object {},
                          "watcher_count": undefined,
                          "watchers": Object {},
                        },
                        "type": "messaging",
                      },
                    },
                    "anonymous": false,
                    "axiosInstance": [Function],
                    "baseURL": "https://chat-us-east-1.stream-io-api.com",
                    "browser": false,
                    "configs": Object {
                      "messaging": Object {
                        "automod": "disabled",
                        "automod_behavior": "flag",
                        "commands": Array [
                          Object {
                            "args": "[text]",
                            "description": "Post a random gif to the channel",
                            "name": "giphy",
                            "set": "fun_set",
                          },
                        ],
                        "connect_events": true,
                        "created_at": "2020-04-24T11:36:43.859020368Z",
                        "max_message_length": 5000,
                        "message_retention": "infinite",
                        "mutes": true,
                        "name": "messaging",
                        "reactions": true,
                        "read_events": true,
                        "replies": true,
                        "search": true,
                        "typing_events": true,
                        "updated_at": "2020-04-24T11:36:43.859022903Z",
                        "uploads": true,
                        "url_enrichment": true,
                      },
                    },
                    "connectionId": "dumm_connection_id",
                    "dispatchEvent": [Function],
                    "doAxiosRequest": [Function],
                    "handleEvent": [Function],
                    "key": "API_KEY",
                    "listeners": Object {
                      "connection.changed": Array [
                        [Function],
                      ],
                      "connection.recovered": Array [
                        [Function],
                        [Function],
                      ],
                    },
                    "logger": [Function],
                    "mutedChannels": Array [],
                    "node": true,
                    "options": Object {
                      "httpAgent": Agent {
                        "_events": Object {
                          "free": [Function],
                          "newListener": [Function],
                        },
                        "_eventsCount": 2,
                        "_maxListeners": undefined,
                        "defaultPort": 80,
                        "freeSockets": Object {},
                        "keepAlive": 3000,
                        "keepAliveMsecs": 1000,
                        "maxFreeSockets": 256,
                        "maxSockets": Infinity,
                        "options": Object {
                          "keepAlive": 3000,
                          "path": null,
                        },
                        "protocol": "http:",
                        "requests": Object {},
                        "sockets": Object {},
                        Symbol(kCapture): false,
                      },
                      "httpsAgent": Agent {
                        "_events": Object {
                          "free": [Function],
                          "newListener": [Function],
                        },
                        "_eventsCount": 2,
                        "_maxListeners": undefined,
                        "_sessionCache": Object {
                          "list": Array [],
                          "map": Object {},
                        },
                        "defaultPort": 443,
                        "freeSockets": Object {},
                        "keepAlive": 3000,
                        "keepAliveMsecs": 1000,
                        "maxCachedSessions": 100,
                        "maxFreeSockets": 256,
                        "maxSockets": Infinity,
                        "options": Object {
                          "keepAlive": 3000,
                          "path": null,
                        },
                        "protocol": "https:",
                        "requests": Object {},
                        "sockets": Object {},
                        Symbol(kCapture): false,
                      },
                      "timeout": 3000,
                      "withCredentials": false,
                    },
                    "recoverState": [Function],
                    "secret": null,
                    "setAnonymousUser": [Function],
                    "setUser": [Function],
                    "setUserPromise": null,
                    "state": ClientState {
                      "userChannelReferences": Object {
                        "GrantyBoi2": Object {
                          "messaging:c15ca31e-4cc4-512c-8495-1d4c278763af": true,
                        },
                      },
                      "users": Object {
                        "GrantyBoi2": Object {
                          "banned": false,
                          "created_at": "2020-04-27T13:39:49.331742Z",
                          "id": "GrantyBoi2",
                          "image": "https://i.imgur.com/SLx06PP.png",
                          "name": "Grant",
                          "online": false,
                          "role": "user",
                          "updated_at": "2020-04-27T13:39:49.332087Z",
                        },
                      },
                    },
                    "tokenManager": Object {
                      "getToken": [MockFunction] {
                        "calls": Array [
                          Array [],
                          Array [],
                        ],
                        "results": Array [
                          Object {
                            "type": "return",
                            "value": "dummy_token",
                          },
                          Object {
                            "type": "return",
                            "value": "dummy_token",
                          },
                        ],
                      },
                      "tokenReady": [MockFunction] {
                        "calls": Array [
                          Array [],
                          Array [],
                        ],
                        "results": Array [
                          Object {
                            "type": "return",
                            "value": true,
                          },
                          Object {
                            "type": "return",
                            "value": true,
                          },
                        ],
                      },
                    },
                    "user": Object {
                      "id": "testID2",
                      "mutes": Array [],
                    },
                    "userID": "testID2",
                    "userToken": "dummy_token",
                    "wsBaseURL": "wss://chat-us-east-1.stream-io-api.com",
                    "wsConnection": null,
                    "wsPromise": null,
                  }
                }
                connectionRecovering={false}
                disabled={false}
                error={false}
                eventHistory={Object {}}
                groupStyles={
                  Array [
                    "single",
                  ]
                }
                hasMore={true}
                initialMessage={true}
                isOnline={true}
                lastRead={2020-08-17T18:08:03.196Z}
                loading={false}
                loadingMore={false}
                logger={[Function]}
                markRead={[Function]}
                members={
                  Object {
                    "GrantyBoi2": Object {
                      "invited": false,
                      "is_moderator": false,
                      "role": "member",
                      "user": Object {
                        "banned": false,
                        "created_at": "2020-04-27T13:39:49.331742Z",
                        "id": "GrantyBoi2",
                        "image": "https://i.imgur.com/SLx06PP.png",
                        "name": "Grant",
                        "online": false,
                        "role": "user",
                        "updated_at": "2020-04-27T13:39:49.332087Z",
                      },
                      "user_id": "GrantyBoi2",
                    },
                  }
                }
                message={
                  Object {
                    "__html": "<p>regular</p>",
                    "attachments": Array [],
                    "created_at": 2020-05-05T14:50:00.000Z,
                    "html": "<p>regular</p>",
                    "id": "b4612a73-fa2b-5787-bf71-1adc8f291a04",
                    "status": "received",
                    "text": "Message3",
                    "type": "regular",
                    "updated_at": 2020-05-05T14:50:00.000Z,
                    "user": Object {
                      "banned": false,
                      "created_at": "2020-04-27T13:39:49.331742Z",
                      "id": "NeiliBoi3",
                      "image": "https://i.imgur.com/T68W8nR_d.webp?maxwidth=728&fidelity=grand",
                      "name": "Neil",
                      "online": false,
                      "role": "user",
                      "updated_at": "2020-04-27T13:39:49.332087Z",
                    },
                  }
                }
                online={true}
                read={
                  Object {
                    "testID2": Object {
                      "last_read": 2020-05-05T14:50:00.000Z,
                      "user": Object {
                        "id": "testID2",
                        "mutes": Array [],
                      },
                    },
                  }
                }
                readOnly={true}
                setActiveChannel={[Function]}
                setLastRead={[Function]}
                t={[Function]}
                tDateTimeParser={[Function]}
                thread={
                  Object {
                    "__html": "<p>regular</p>",
                    "attachments": Array [],
                    "created_at": 2020-05-05T14:50:00.000Z,
                    "html": "<p>regular</p>",
                    "id": "b4612a73-fa2b-5787-bf71-1adc8f291a04",
                    "status": "received",
                    "text": "Message3",
                    "type": "regular",
                    "updated_at": 2020-05-05T14:50:00.000Z,
                    "user": Object {
                      "banned": false,
                      "created_at": "2020-04-27T13:39:49.331742Z",
                      "id": "NeiliBoi3",
                      "image": "https://i.imgur.com/T68W8nR_d.webp?maxwidth=728&fidelity=grand",
                      "name": "Neil",
                      "online": false,
                      "role": "user",
                      "updated_at": "2020-04-27T13:39:49.332087Z",
                    },
                  }
                }
                threadHasMore={true}
                threadList={true}
                typing={Object {}}
                unmounted={false}
                watchers={Object {}}
              />
              <Styled(View)>
                <Styled(Text)>
                  Start of a new thread
                </Styled(Text)>
              </Styled(View)>
            </React.Fragment>
          }
          data={
            Array [
              Object {
                "__html": "<p>regular</p>",
                "attachments": Array [],
                "created_at": 2020-05-05T14:50:00.000Z,
                "groupStyles": Array [
                  "single",
                ],
                "html": "<p>regular</p>",
                "id": "38ef6f7c-3090-5759-a37f-ab0053aadb96",
                "parent_id": "b4612a73-fa2b-5787-bf71-1adc8f291a04",
                "readBy": Array [],
                "status": "received",
                "text": "Message6",
                "type": "regular",
                "updated_at": 2020-05-05T14:50:00.000Z,
                "user": Object {
                  "banned": false,
                  "created_at": "2020-04-27T13:39:49.331742Z",
                  "id": "GrantyBoi2",
                  "image": "https://i.imgur.com/SLx06PP.png",
                  "name": "Grant",
                  "online": false,
                  "role": "user",
                  "updated_at": "2020-04-27T13:39:49.332087Z",
                },
              },
              Object {
                "__html": "<p>regular</p>",
                "attachments": Array [],
                "created_at": 2020-05-05T14:50:00.000Z,
                "groupStyles": Array [
                  "single",
                ],
                "html": "<p>regular</p>",
                "id": "516efa25-5d29-5c9a-ad2d-4cc183e785bd",
                "parent_id": "b4612a73-fa2b-5787-bf71-1adc8f291a04",
                "readBy": Array [],
                "status": "received",
                "text": "Message5",
                "type": "regular",
                "updated_at": 2020-05-05T14:50:00.000Z,
                "user": Object {
                  "banned": false,
                  "created_at": "2020-04-27T13:39:49.331742Z",
                  "id": "NeiliBoi3",
                  "image": "https://i.imgur.com/T68W8nR_d.webp?maxwidth=728&fidelity=grand",
                  "name": "Neil",
                  "online": false,
                  "role": "user",
                  "updated_at": "2020-04-27T13:39:49.332087Z",
                },
              },
              Object {
                "__html": "<p>regular</p>",
                "attachments": Array [],
                "created_at": 2020-05-05T14:50:00.000Z,
                "groupStyles": Array [
                  "single",
                ],
                "html": "<p>regular</p>",
                "id": "82a83b16-b611-527c-b3ac-765ef6220490",
                "parent_id": "b4612a73-fa2b-5787-bf71-1adc8f291a04",
                "readBy": Array [],
                "status": "received",
                "text": "Message4",
                "type": "regular",
                "updated_at": 2020-05-05T14:50:00.000Z,
                "user": Object {
                  "banned": false,
                  "created_at": "2020-04-27T13:39:49.331742Z",
                  "id": "GrantyBoi2",
                  "image": "https://i.imgur.com/SLx06PP.png",
                  "name": "Grant",
                  "online": false,
                  "role": "user",
                  "updated_at": "2020-04-27T13:39:49.332087Z",
                },
              },
              Object {
                "date": 2020-05-05T14:50:00.000Z,
                "groupStyles": undefined,
                "readBy": Array [],
                "type": "message.date",
              },
            ]
          }
          disableVirtualization={false}
          extraData={false}
          getItem={[Function]}
          getItemCount={[Function]}
          horizontal={false}
          initialNumToRender={10}
          invertStickyHeaders={true}
          inverted={true}
          keyExtractor={[Function]}
          keyboardShouldPersistTaps="always"
          maintainVisibleContentPosition={
            Object {
              "autoscrollToTopThreshold": 10,
              "minIndexForVisible": 1,
            }
          }
          maxToRenderPerBatch={10}
          numColumns={1}
          onContentSizeChange={[Function]}
          onEndReached={[Function]}
          onEndReachedThreshold={2}
          onLayout={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          style={
            Array [
              Object {
                "transform": Array [
                  Object {
                    "scaleY": -1,
                  },
                ],
              },
              Array [
                Object {
                  "flexBasis": 0,
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "paddingLeft": 10,
                  "paddingRight": 10,
                  "width": "100%",
                },
              ],
            ]
          }
          updateCellsBatchingPeriod={50}
          viewabilityConfigCallbackPairs={Array []}
          windowSize={21}
        >
          <View>
            <View
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "flexDirection": "column-reverse",
                  },
                  Object {
                    "transform": Array [
                      Object {
                        "scaleY": -1,
                      },
                    ],
                  },
                ]
              }
            >
              <View
                accessible={true}
                focusable={true}
                isTVSelectable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  alignment="left"
                  hasMarginBottom={true}
                  isVeryLastMessage={false}
                  style={
                    Array [
                      Object {
                        "alignItems": "flex-end",
                        "display": "flex",
                        "flexDirection": "row",
                        "justifyContent": "flex-start",
                        "marginBottom": 20,
                      },
                    ]
                  }
                >
                  <View
                    alignment="left"
                    style={
                      Array [
                        Object {
                          "marginLeft": 0,
                          "marginRight": 8,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                          },
                        ]
                      }
                    >
                      <Image
                        accessibilityLabel="initials"
                        onError={[Function]}
                        resizeMethod="resize"
                        size={32}
                        source={
                          Object {
                            "uri": "https://i.imgur.com/SLx06PP.png",
                          }
                        }
                        style={
                          Array [
                            Object {
                              "borderRadius": 16,
                              "height": 32,
                              "width": 32,
                            },
                          ]
                        }
                        testID="avatar-image"
                      />
                    </View>
                  </View>
                  <View
                    accessible={true}
                    focusable={true}
                    isTVSelectable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "alignItems": "flex-start",
                        "backgroundColor": "transparent",
                        "borderBottomLeftRadius": 2,
                        "borderBottomRightRadius": 16,
                        "borderTopLeftRadius": 16,
                        "borderTopRightRadius": 16,
                        "display": "flex",
                        "flexDirection": "column",
                        "justifyContent": "flex-start",
                        "maxWidth": 250,
                        "opacity": 1,
                        "paddingBottom": 0,
                        "paddingLeft": 0,
                        "paddingRight": 0,
                        "paddingTop": 0,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      focusable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    />
                    <View
                      alignment="left"
                      collapsable={false}
                      style={
                        Array [
                          Object {
                            "alignItems": "flex-start",
                          },
                        ]
                      }
                    >
                      <View
                        alignment="left"
                        groupStyle="leftSingle"
                        status="received"
                        style={
                          Array [
                            Object {
                              "alignSelf": "flex-start",
                              "backgroundColor": "transparent",
                              "borderBottomLeftRadius": 2,
                              "borderBottomRightRadius": 16,
                              "borderColor": "rgba(0,0,0,0.08)",
                              "borderTopLeftRadius": 16,
                              "borderTopRightRadius": 16,
                              "borderWidth": 0.5,
                              "marginTop": 2,
                              "paddingBottom": 5,
                              "paddingLeft": 8,
                              "paddingRight": 8,
                              "paddingTop": 5,
                            },
                          ]
                        }
                        type="regular"
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "minHeight": 1,
                                "minWidth": 1,
                              },
                              undefined,
                            ]
                          }
                        >
                          <Text
                            style={
                              Object {
                                "alignItems": "flex-start",
                                "flexDirection": "row",
                                "flexWrap": "wrap",
                                "justifyContent": "flex-start",
                              }
                            }
                          >
                            <Text
                              style={
                                Array [
                                  Object {
                                    "color": "#222222",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              Message6
                            </Text>
                          </Text>
                        </View>
                      </View>
                    </View>
                    <View
                      style={
                        Array [
                          Object {
                            "marginTop": 2,
                          },
                        ]
                      }
                    >
                      <Text
                        alignment="left"
                        style={
                          Array [
                            Object {
                              "color": "rgba(0,0,0,0.5)",
                              "fontSize": 11,
                              "textAlign": "left",
                            },
                          ]
                        }
                      >
                        2:50 PM
                      </Text>
                    </View>
                    <Modal
                      animationType="none"
                      hardwareAccelerated={false}
                      onRequestClose={[Function]}
                      transparent={true}
                      visible={false}
                    >
                      <View
                        style={
                          Array [
                            Array [
                              Object {
                                "flex": 1,
                                "flexDirection": "row",
                              },
                            ],
                          ]
                        }
                      >
                        <Text
                          onPress={[Function]}
                          style={
                            Array [
                              Array [
                                Object {
                                  "backgroundColor": "#000",
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 0.4,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                },
                              ],
                            ]
                          }
                        />
                        <View
                          style={
                            Object {
                              "alignSelf": "flex-end",
                              "backgroundColor": "#e5e5e5",
                              "flex": 1,
                              "height": 146.5,
                              "transform": Array [
                                Object {
                                  "translateY": 146.5,
                                },
                              ],
                            }
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "alignItems": "center",
                                  "backgroundColor": "#fff",
                                  "height": 40,
                                  "justifyContent": "center",
                                },
                              ]
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "height": "100%",
                                    "justifyContent": "center",
                                    "width": "100%",
                                  },
                                ]
                              }
                            >
                              <Text
                                style={
                                  Array [
                                    Object {
                                      "color": "#757575",
                                      "fontSize": 14,
                                    },
                                  ]
                                }
                              >
                                Choose an action
                              </Text>
                            </View>
                          </View>
                          <RCTScrollView
                            scrollEnabled={false}
                          >
                            <View>
                              <View
                                accessible={true}
                                focusable={true}
                                isTVSelectable={true}
                                onClick={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "center",
                                      "backgroundColor": "#fff",
                                      "height": 50,
                                      "justifyContent": "center",
                                      "marginTop": 0.5,
                                    },
                                  ]
                                }
                              >
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "alignItems": "center",
                                        "backgroundColor": "#fff",
                                        "height": 50,
                                        "justifyContent": "center",
                                        "width": "100%",
                                      },
                                      null,
                                    ]
                                  }
                                >
                                  <Text
                                    style={
                                      Array [
                                        Object {
                                          "color": "#388cea",
                                          "fontSize": 18,
                                        },
                                      ]
                                    }
                                  >
                                    Add Reaction
                                  </Text>
                                </View>
                              </View>
                            </View>
                          </RCTScrollView>
                          <View
                            accessible={true}
                            focusable={true}
                            isTVSelectable={true}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Array [
                                Object {
                                  "alignItems": "center",
                                  "backgroundColor": "#fff",
                                  "height": 50,
                                  "justifyContent": "center",
                                  "marginTop": 6,
                                },
                              ]
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "height": 50,
                                    "justifyContent": "center",
                                    "width": "100%",
                                  },
                                  null,
                                ]
                              }
                            >
                              <Text
                                style={
                                  Array [
                                    Object {
                                      "color": "red",
                                      "fontSize": 18,
                                    },
                                  ]
                                }
                              >
                                Cancel
                              </Text>
                            </View>
                          </View>
                        </View>
                      </View>
                    </Modal>
                  </View>
                </View>
              </View>
            </View>
            <View
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "flexDirection": "column-reverse",
                  },
                  Object {
                    "transform": Array [
                      Object {
                        "scaleY": -1,
                      },
                    ],
                  },
                ]
              }
            >
              <View
                accessible={true}
                focusable={true}
                isTVSelectable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  alignment="left"
                  hasMarginBottom={true}
                  isVeryLastMessage={false}
                  style={
                    Array [
                      Object {
                        "alignItems": "flex-end",
                        "display": "flex",
                        "flexDirection": "row",
                        "justifyContent": "flex-start",
                        "marginBottom": 20,
                      },
                    ]
                  }
                >
                  <View
                    alignment="left"
                    style={
                      Array [
                        Object {
                          "marginLeft": 0,
                          "marginRight": 8,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                          },
                        ]
                      }
                    >
                      <Image
                        accessibilityLabel="initials"
                        onError={[Function]}
                        resizeMethod="resize"
                        size={32}
                        source={
                          Object {
                            "uri": "https://i.imgur.com/T68W8nR_d.webp?maxwidth=728&fidelity=grand",
                          }
                        }
                        style={
                          Array [
                            Object {
                              "borderRadius": 16,
                              "height": 32,
                              "width": 32,
                            },
                          ]
                        }
                        testID="avatar-image"
                      />
                    </View>
                  </View>
                  <View
                    accessible={true}
                    focusable={true}
                    isTVSelectable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "alignItems": "flex-start",
                        "backgroundColor": "transparent",
                        "borderBottomLeftRadius": 2,
                        "borderBottomRightRadius": 16,
                        "borderTopLeftRadius": 16,
                        "borderTopRightRadius": 16,
                        "display": "flex",
                        "flexDirection": "column",
                        "justifyContent": "flex-start",
                        "maxWidth": 250,
                        "opacity": 1,
                        "paddingBottom": 0,
                        "paddingLeft": 0,
                        "paddingRight": 0,
                        "paddingTop": 0,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      focusable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    />
                    <View
                      alignment="left"
                      collapsable={false}
                      style={
                        Array [
                          Object {
                            "alignItems": "flex-start",
                          },
                        ]
                      }
                    >
                      <View
                        alignment="left"
                        groupStyle="leftSingle"
                        status="received"
                        style={
                          Array [
                            Object {
                              "alignSelf": "flex-start",
                              "backgroundColor": "transparent",
                              "borderBottomLeftRadius": 2,
                              "borderBottomRightRadius": 16,
                              "borderColor": "rgba(0,0,0,0.08)",
                              "borderTopLeftRadius": 16,
                              "borderTopRightRadius": 16,
                              "borderWidth": 0.5,
                              "marginTop": 2,
                              "paddingBottom": 5,
                              "paddingLeft": 8,
                              "paddingRight": 8,
                              "paddingTop": 5,
                            },
                          ]
                        }
                        type="regular"
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "minHeight": 1,
                                "minWidth": 1,
                              },
                              undefined,
                            ]
                          }
                        >
                          <Text
                            style={
                              Object {
                                "alignItems": "flex-start",
                                "flexDirection": "row",
                                "flexWrap": "wrap",
                                "justifyContent": "flex-start",
                              }
                            }
                          >
                            <Text
                              style={
                                Array [
                                  Object {
                                    "color": "#222222",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              Message5
                            </Text>
                          </Text>
                        </View>
                      </View>
                    </View>
                    <View
                      style={
                        Array [
                          Object {
                            "marginTop": 2,
                          },
                        ]
                      }
                    >
                      <Text
                        alignment="left"
                        style={
                          Array [
                            Object {
                              "color": "rgba(0,0,0,0.5)",
                              "fontSize": 11,
                              "textAlign": "left",
                            },
                          ]
                        }
                      >
                        2:50 PM
                      </Text>
                    </View>
                    <Modal
                      animationType="none"
                      hardwareAccelerated={false}
                      onRequestClose={[Function]}
                      transparent={true}
                      visible={false}
                    >
                      <View
                        style={
                          Array [
                            Array [
                              Object {
                                "flex": 1,
                                "flexDirection": "row",
                              },
                            ],
                          ]
                        }
                      >
                        <Text
                          onPress={[Function]}
                          style={
                            Array [
                              Array [
                                Object {
                                  "backgroundColor": "#000",
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 0.4,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                },
                              ],
                            ]
                          }
                        />
                        <View
                          style={
                            Object {
                              "alignSelf": "flex-end",
                              "backgroundColor": "#e5e5e5",
                              "flex": 1,
                              "height": 146.5,
                              "transform": Array [
                                Object {
                                  "translateY": 146.5,
                                },
                              ],
                            }
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "alignItems": "center",
                                  "backgroundColor": "#fff",
                                  "height": 40,
                                  "justifyContent": "center",
                                },
                              ]
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "height": "100%",
                                    "justifyContent": "center",
                                    "width": "100%",
                                  },
                                ]
                              }
                            >
                              <Text
                                style={
                                  Array [
                                    Object {
                                      "color": "#757575",
                                      "fontSize": 14,
                                    },
                                  ]
                                }
                              >
                                Choose an action
                              </Text>
                            </View>
                          </View>
                          <RCTScrollView
                            scrollEnabled={false}
                          >
                            <View>
                              <View
                                accessible={true}
                                focusable={true}
                                isTVSelectable={true}
                                onClick={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "center",
                                      "backgroundColor": "#fff",
                                      "height": 50,
                                      "justifyContent": "center",
                                      "marginTop": 0.5,
                                    },
                                  ]
                                }
                              >
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "alignItems": "center",
                                        "backgroundColor": "#fff",
                                        "height": 50,
                                        "justifyContent": "center",
                                        "width": "100%",
                                      },
                                      null,
                                    ]
                                  }
                                >
                                  <Text
                                    style={
                                      Array [
                                        Object {
                                          "color": "#388cea",
                                          "fontSize": 18,
                                        },
                                      ]
                                    }
                                  >
                                    Add Reaction
                                  </Text>
                                </View>
                              </View>
                            </View>
                          </RCTScrollView>
                          <View
                            accessible={true}
                            focusable={true}
                            isTVSelectable={true}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Array [
                                Object {
                                  "alignItems": "center",
                                  "backgroundColor": "#fff",
                                  "height": 50,
                                  "justifyContent": "center",
                                  "marginTop": 6,
                                },
                              ]
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "height": 50,
                                    "justifyContent": "center",
                                    "width": "100%",
                                  },
                                  null,
                                ]
                              }
                            >
                              <Text
                                style={
                                  Array [
                                    Object {
                                      "color": "red",
                                      "fontSize": 18,
                                    },
                                  ]
                                }
                              >
                                Cancel
                              </Text>
                            </View>
                          </View>
                        </View>
                      </View>
                    </Modal>
                  </View>
                </View>
              </View>
            </View>
            <View
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "flexDirection": "column-reverse",
                  },
                  Object {
                    "transform": Array [
                      Object {
                        "scaleY": -1,
                      },
                    ],
                  },
                ]
              }
            >
              <View
                accessible={true}
                focusable={true}
                isTVSelectable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  alignment="left"
                  hasMarginBottom={true}
                  isVeryLastMessage={false}
                  style={
                    Array [
                      Object {
                        "alignItems": "flex-end",
                        "display": "flex",
                        "flexDirection": "row",
                        "justifyContent": "flex-start",
                        "marginBottom": 20,
                      },
                    ]
                  }
                >
                  <View
                    alignment="left"
                    style={
                      Array [
                        Object {
                          "marginLeft": 0,
                          "marginRight": 8,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                          },
                        ]
                      }
                    >
                      <Image
                        accessibilityLabel="initials"
                        onError={[Function]}
                        resizeMethod="resize"
                        size={32}
                        source={
                          Object {
                            "uri": "https://i.imgur.com/SLx06PP.png",
                          }
                        }
                        style={
                          Array [
                            Object {
                              "borderRadius": 16,
                              "height": 32,
                              "width": 32,
                            },
                          ]
                        }
                        testID="avatar-image"
                      />
                    </View>
                  </View>
                  <View
                    accessible={true}
                    focusable={true}
                    isTVSelectable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "alignItems": "flex-start",
                        "backgroundColor": "transparent",
                        "borderBottomLeftRadius": 2,
                        "borderBottomRightRadius": 16,
                        "borderTopLeftRadius": 16,
                        "borderTopRightRadius": 16,
                        "display": "flex",
                        "flexDirection": "column",
                        "justifyContent": "flex-start",
                        "maxWidth": 250,
                        "opacity": 1,
                        "paddingBottom": 0,
                        "paddingLeft": 0,
                        "paddingRight": 0,
                        "paddingTop": 0,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      focusable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    />
                    <View
                      alignment="left"
                      collapsable={false}
                      style={
                        Array [
                          Object {
                            "alignItems": "flex-start",
                          },
                        ]
                      }
                    >
                      <View
                        alignment="left"
                        groupStyle="leftSingle"
                        status="received"
                        style={
                          Array [
                            Object {
                              "alignSelf": "flex-start",
                              "backgroundColor": "transparent",
                              "borderBottomLeftRadius": 2,
                              "borderBottomRightRadius": 16,
                              "borderColor": "rgba(0,0,0,0.08)",
                              "borderTopLeftRadius": 16,
                              "borderTopRightRadius": 16,
                              "borderWidth": 0.5,
                              "marginTop": 2,
                              "paddingBottom": 5,
                              "paddingLeft": 8,
                              "paddingRight": 8,
                              "paddingTop": 5,
                            },
                          ]
                        }
                        type="regular"
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "minHeight": 1,
                                "minWidth": 1,
                              },
                              undefined,
                            ]
                          }
                        >
                          <Text
                            style={
                              Object {
                                "alignItems": "flex-start",
                                "flexDirection": "row",
                                "flexWrap": "wrap",
                                "justifyContent": "flex-start",
                              }
                            }
                          >
                            <Text
                              style={
                                Array [
                                  Object {
                                    "color": "#222222",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              Message4
                            </Text>
                          </Text>
                        </View>
                      </View>
                    </View>
                    <View
                      style={
                        Array [
                          Object {
                            "marginTop": 2,
                          },
                        ]
                      }
                    >
                      <Text
                        alignment="left"
                        style={
                          Array [
                            Object {
                              "color": "rgba(0,0,0,0.5)",
                              "fontSize": 11,
                              "textAlign": "left",
                            },
                          ]
                        }
                      >
                        2:50 PM
                      </Text>
                    </View>
                    <Modal
                      animationType="none"
                      hardwareAccelerated={false}
                      onRequestClose={[Function]}
                      transparent={true}
                      visible={false}
                    >
                      <View
                        style={
                          Array [
                            Array [
                              Object {
                                "flex": 1,
                                "flexDirection": "row",
                              },
                            ],
                          ]
                        }
                      >
                        <Text
                          onPress={[Function]}
                          style={
                            Array [
                              Array [
                                Object {
                                  "backgroundColor": "#000",
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 0.4,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                },
                              ],
                            ]
                          }
                        />
                        <View
                          style={
                            Object {
                              "alignSelf": "flex-end",
                              "backgroundColor": "#e5e5e5",
                              "flex": 1,
                              "height": 146.5,
                              "transform": Array [
                                Object {
                                  "translateY": 146.5,
                                },
                              ],
                            }
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "alignItems": "center",
                                  "backgroundColor": "#fff",
                                  "height": 40,
                                  "justifyContent": "center",
                                },
                              ]
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "height": "100%",
                                    "justifyContent": "center",
                                    "width": "100%",
                                  },
                                ]
                              }
                            >
                              <Text
                                style={
                                  Array [
                                    Object {
                                      "color": "#757575",
                                      "fontSize": 14,
                                    },
                                  ]
                                }
                              >
                                Choose an action
                              </Text>
                            </View>
                          </View>
                          <RCTScrollView
                            scrollEnabled={false}
                          >
                            <View>
                              <View
                                accessible={true}
                                focusable={true}
                                isTVSelectable={true}
                                onClick={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "center",
                                      "backgroundColor": "#fff",
                                      "height": 50,
                                      "justifyContent": "center",
                                      "marginTop": 0.5,
                                    },
                                  ]
                                }
                              >
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "alignItems": "center",
                                        "backgroundColor": "#fff",
                                        "height": 50,
                                        "justifyContent": "center",
                                        "width": "100%",
                                      },
                                      null,
                                    ]
                                  }
                                >
                                  <Text
                                    style={
                                      Array [
                                        Object {
                                          "color": "#388cea",
                                          "fontSize": 18,
                                        },
                                      ]
                                    }
                                  >
                                    Add Reaction
                                  </Text>
                                </View>
                              </View>
                            </View>
                          </RCTScrollView>
                          <View
                            accessible={true}
                            focusable={true}
                            isTVSelectable={true}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Array [
                                Object {
                                  "alignItems": "center",
                                  "backgroundColor": "#fff",
                                  "height": 50,
                                  "justifyContent": "center",
                                  "marginTop": 6,
                                },
                              ]
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "height": 50,
                                    "justifyContent": "center",
                                    "width": "100%",
                                  },
                                  null,
                                ]
                              }
                            >
                              <Text
                                style={
                                  Array [
                                    Object {
                                      "color": "red",
                                      "fontSize": 18,
                                    },
                                  ]
                                }
                              >
                                Cancel
                              </Text>
                            </View>
                          </View>
                        </View>
                      </View>
                    </Modal>
                  </View>
                </View>
              </View>
            </View>
            <View
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "flexDirection": "column-reverse",
                  },
                  Object {
                    "transform": Array [
                      Object {
                        "scaleY": -1,
                      },
                    ],
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "marginBottom": 20,
                      "marginTop": 20,
                    },
                  ]
                }
                testID="date-separator"
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#EBEBEB",
                        "flexBasis": 0,
                        "flexGrow": 1,
                        "flexShrink": 1,
                        "height": 0.5,
                      },
                    ]
                  }
                />
                <Text
                  style={
                    Array [
                      Object {
                        "fontSize": 10,
                        "marginLeft": 5,
                        "marginRight": 5,
                        "opacity": 0.8,
                        "textAlign": "center",
                        "textTransform": "uppercase",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "fontSize": 10,
                          "fontWeight": "700",
                          "opacity": 0.8,
                          "textTransform": "uppercase",
                        },
                      ]
                    }
                  >
                    05/05/2020
                  </Text>
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#EBEBEB",
                        "flexBasis": 0,
                        "flexGrow": 1,
                        "flexShrink": 1,
                        "height": 0.5,
                      },
                    ]
                  }
                />
              </View>
            </View>
            <View
              onLayout={[Function]}
              style={
                Object {
                  "transform": Array [
                    Object {
                      "scaleY": -1,
                    },
                  ],
                }
              }
            >
              <View
                accessible={true}
                focusable={true}
                isTVSelectable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  alignment="left"
                  hasMarginBottom={true}
                  isVeryLastMessage={true}
                  style={
                    Array [
                      Object {
                        "alignItems": "flex-end",
                        "display": "flex",
                        "flexDirection": "row",
                        "justifyContent": "flex-start",
                        "marginBottom": 30,
                      },
                    ]
                  }
                >
                  <View
                    alignment="left"
                    style={
                      Array [
                        Object {
                          "marginLeft": 0,
                          "marginRight": 8,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                          },
                        ]
                      }
                    >
                      <Image
                        accessibilityLabel="initials"
                        onError={[Function]}
                        resizeMethod="resize"
                        size={32}
                        source={
                          Object {
                            "uri": "https://i.imgur.com/T68W8nR_d.webp?maxwidth=728&fidelity=grand",
                          }
                        }
                        style={
                          Array [
                            Object {
                              "borderRadius": 16,
                              "height": 32,
                              "width": 32,
                            },
                          ]
                        }
                        testID="avatar-image"
                      />
                    </View>
                  </View>
                  <View
                    accessible={true}
                    focusable={true}
                    isTVSelectable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "alignItems": "flex-start",
                        "backgroundColor": "transparent",
                        "borderBottomLeftRadius": 2,
                        "borderBottomRightRadius": 16,
                        "borderTopLeftRadius": 16,
                        "borderTopRightRadius": 16,
                        "display": "flex",
                        "flexDirection": "column",
                        "justifyContent": "flex-start",
                        "maxWidth": 250,
                        "opacity": 1,
                        "paddingBottom": 0,
                        "paddingLeft": 0,
                        "paddingRight": 0,
                        "paddingTop": 0,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      focusable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    />
                    <View
                      alignment="left"
                      collapsable={false}
                      style={
                        Array [
                          Object {
                            "alignItems": "flex-start",
                          },
                        ]
                      }
                    >
                      <View
                        alignment="left"
                        groupStyle="leftSingle"
                        status="received"
                        style={
                          Array [
                            Object {
                              "alignSelf": "flex-start",
                              "backgroundColor": "transparent",
                              "borderBottomLeftRadius": 2,
                              "borderBottomRightRadius": 16,
                              "borderColor": "rgba(0,0,0,0.08)",
                              "borderTopLeftRadius": 16,
                              "borderTopRightRadius": 16,
                              "borderWidth": 0.5,
                              "marginTop": 2,
                              "paddingBottom": 5,
                              "paddingLeft": 8,
                              "paddingRight": 8,
                              "paddingTop": 5,
                            },
                          ]
                        }
                        type="regular"
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "minHeight": 1,
                                "minWidth": 1,
                              },
                              undefined,
                            ]
                          }
                        >
                          <Text
                            style={
                              Object {
                                "alignItems": "flex-start",
                                "flexDirection": "row",
                                "flexWrap": "wrap",
                                "justifyContent": "flex-start",
                              }
                            }
                          >
                            <Text
                              style={
                                Array [
                                  Object {
                                    "color": "#222222",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              Message3
                            </Text>
                          </Text>
                        </View>
                      </View>
                    </View>
                    <View
                      style={
                        Array [
                          Object {
                            "marginTop": 2,
                          },
                        ]
                      }
                    >
                      <Text
                        alignment="left"
                        style={
                          Array [
                            Object {
                              "color": "rgba(0,0,0,0.5)",
                              "fontSize": 11,
                              "textAlign": "left",
                            },
                          ]
                        }
                      >
                        2:50 PM
                      </Text>
                    </View>
                    <Modal
                      animationType="none"
                      hardwareAccelerated={false}
                      onRequestClose={[Function]}
                      transparent={true}
                      visible={false}
                    >
                      <View
                        style={
                          Array [
                            Array [
                              Object {
                                "flex": 1,
                                "flexDirection": "row",
                              },
                            ],
                          ]
                        }
                      >
                        <Text
                          onPress={[Function]}
                          style={
                            Array [
                              Array [
                                Object {
                                  "backgroundColor": "#000",
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 0.4,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                },
                              ],
                            ]
                          }
                        />
                        <View
                          style={
                            Object {
                              "alignSelf": "flex-end",
                              "backgroundColor": "#e5e5e5",
                              "flex": 1,
                              "height": 146.5,
                              "transform": Array [
                                Object {
                                  "translateY": 146.5,
                                },
                              ],
                            }
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "alignItems": "center",
                                  "backgroundColor": "#fff",
                                  "height": 40,
                                  "justifyContent": "center",
                                },
                              ]
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "height": "100%",
                                    "justifyContent": "center",
                                    "width": "100%",
                                  },
                                ]
                              }
                            >
                              <Text
                                style={
                                  Array [
                                    Object {
                                      "color": "#757575",
                                      "fontSize": 14,
                                    },
                                  ]
                                }
                              >
                                Choose an action
                              </Text>
                            </View>
                          </View>
                          <RCTScrollView
                            scrollEnabled={false}
                          >
                            <View>
                              <View
                                accessible={true}
                                focusable={true}
                                isTVSelectable={true}
                                onClick={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "center",
                                      "backgroundColor": "#fff",
                                      "height": 50,
                                      "justifyContent": "center",
                                      "marginTop": 0.5,
                                    },
                                  ]
                                }
                              >
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "alignItems": "center",
                                        "backgroundColor": "#fff",
                                        "height": 50,
                                        "justifyContent": "center",
                                        "width": "100%",
                                      },
                                      null,
                                    ]
                                  }
                                >
                                  <Text
                                    style={
                                      Array [
                                        Object {
                                          "color": "#388cea",
                                          "fontSize": 18,
                                        },
                                      ]
                                    }
                                  >
                                    Add Reaction
                                  </Text>
                                </View>
                              </View>
                            </View>
                          </RCTScrollView>
                          <View
                            accessible={true}
                            focusable={true}
                            isTVSelectable={true}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Array [
                                Object {
                                  "alignItems": "center",
                                  "backgroundColor": "#fff",
                                  "height": 50,
                                  "justifyContent": "center",
                                  "marginTop": 6,
                                },
                              ]
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "height": 50,
                                    "justifyContent": "center",
                                    "width": "100%",
                                  },
                                  null,
                                ]
                              }
                            >
                              <Text
                                style={
                                  Array [
                                    Object {
                                      "color": "red",
                                      "fontSize": 18,
                                    },
                                  ]
                                }
                              >
                                Cancel
                              </Text>
                            </View>
                          </View>
                        </View>
                      </View>
                    </Modal>
                  </View>
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#f4f9ff",
                      "borderRadius": 4,
                      "display": "flex",
                      "marginBottom": 10,
                      "marginLeft": 10,
                      "marginRight": 10,
                      "marginTop": 10,
                      "paddingBottom": 8,
                      "paddingLeft": 8,
                      "paddingRight": 8,
                      "paddingTop": 8,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {},
                    ]
                  }
                >
                  Start of a new thread
                </Text>
              </View>
            </View>
          </View>
        </RCTScrollView>
      </View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0, 0, 0, 0.05)",
              "borderRadius": 10,
              "display": "flex",
              "flexDirection": "column",
              "marginLeft": 10,
              "marginRight": 10,
              "paddingTop": 0,
            },
          ]
        }
      >
        <Modal
          animationType="none"
          hardwareAccelerated={false}
          onRequestClose={[Function]}
          transparent={true}
          visible={false}
        >
          <View
            style={
              Array [
                Array [
                  Object {
                    "flex": 1,
                    "flexDirection": "row",
                  },
                ],
              ]
            }
          >
            <Text
              onPress={[Function]}
              style={
                Array [
                  Array [
                    Object {
                      "backgroundColor": "#000",
                      "bottom": 0,
                      "left": 0,
                      "opacity": 0.4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                  ],
                ]
              }
            />
            <View
              style={
                Object {
                  "alignSelf": "flex-end",
                  "backgroundColor": "#e5e5e5",
                  "flex": 1,
                  "height": 141,
                  "transform": Array [
                    Object {
                      "translateY": 141,
                    },
                  ],
                }
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fff",
                      "height": 40,
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "height": "100%",
                        "justifyContent": "space-between",
                        "paddingLeft": 20,
                        "paddingRight": 20,
                        "width": "100%",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "fontWeight": "bold",
                        },
                      ]
                    }
                  >
                    Add a file
                  </Text>
                  <View
                    accessible={true}
                    focusable={true}
                    isTVSelectable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "backgroundColor": "rgba(0, 0, 0, 0.05)",
                        "borderRadius": 5,
                        "opacity": 1,
                        "paddingBottom": 5,
                        "paddingLeft": 5,
                        "paddingRight": 5,
                        "paddingTop": 5,
                      }
                    }
                  >
                    <Image
                      source={
                        Object {
                          "testUri": "../../../src/images/icons/icon_close.png",
                        }
                      }
                      style={
                        Object {
                          "height": 15,
                          "width": 15,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
              <RCTScrollView
                scrollEnabled={false}
              >
                <View>
                  <View
                    accessible={true}
                    focusable={true}
                    isTVSelectable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#fff",
                          "height": 50,
                          "justifyContent": "center",
                          "marginTop": 0.5,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                            "justifyContent": "flex-start",
                            "paddingLeft": 20,
                            "width": "100%",
                          },
                        ]
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "backgroundColor": "rgba(0, 0, 0, 0.05)",
                              "borderRadius": 5,
                              "paddingBottom": 5,
                              "paddingLeft": 5,
                              "paddingRight": 5,
                              "paddingTop": 5,
                            },
                          ]
                        }
                      >
                        <Image
                          source={
                            Object {
                              "testUri": "../../../src/images/icons/icon_attach-media.png",
                            }
                          }
                          style={
                            Object {
                              "height": 15,
                              "width": 15,
                            }
                          }
                        />
                      </View>
                      <Text
                        style={
                          Array [
                            Object {},
                          ]
                        }
                      >
                        Upload a photo
                      </Text>
                    </View>
                  </View>
                  <View
                    accessible={true}
                    focusable={true}
                    isTVSelectable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#fff",
                          "height": 50,
                          "justifyContent": "center",
                          "marginTop": 0.5,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                            "justifyContent": "flex-start",
                            "paddingLeft": 20,
                            "width": "100%",
                          },
                        ]
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "backgroundColor": "rgba(0, 0, 0, 0.05)",
                              "borderRadius": 5,
                              "paddingBottom": 5,
                              "paddingLeft": 5,
                              "paddingRight": 5,
                              "paddingTop": 5,
                            },
                          ]
                        }
                      >
                        <Image
                          source={
                            Object {
                              "testUri": "../../../src/images/icons/icon_folder.png",
                            }
                          }
                          style={
                            Object {
                              "height": 15,
                              "width": 15,
                            }
                          }
                        />
                      </View>
                      <Text
                        style={
                          Array [
                            Object {},
                          ]
                        }
                      >
                        Upload a file
                      </Text>
                    </View>
                  </View>
                </View>
              </RCTScrollView>
            </View>
          </View>
        </Modal>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "marginBottom": 10,
                "marginLeft": 10,
                "marginRight": 10,
                "marginTop": 10,
                "minHeight": 46,
                "paddingLeft": 10,
                "paddingRight": 10,
              },
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginRight": 8,
                "opacity": 1,
              }
            }
          >
            <Image
              source={
                Object {
                  "testUri": "../../../src/images/icons/plus-outline.png",
                }
              }
              style={
                Array [
                  Object {
                    "height": 15,
                    "width": 15,
                  },
                ]
              }
            />
          </View>
          <TextInput
            allowFontScaling={true}
            multiline={true}
            onChangeText={[Function]}
            onSelectionChange={[Function]}
            placeholder="Write your message"
            rejectResponderTermination={true}
            style={
              Array [
                Object {
                  "flexBasis": 0,
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "marginBottom": -5,
                  "marginLeft": -5,
                  "marginRight": -5,
                  "marginTop": -5,
                  "maxHeight": 60,
                },
              ]
            }
            underlineColorAndroid="transparent"
            value=""
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginLeft": 8,
                "opacity": 1,
              }
            }
          >
            <Image
              source={
                Object {
                  "testUri": "../../../src/images/icons/icon_new_message.png",
                }
              }
              style={
                Array [
                  Object {
                    "height": 15,
                    "width": 15,
                  },
                ]
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
